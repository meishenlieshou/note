import{_ as t,c as a,a as n,o}from"./app-C0y-7IOt.js";const i={};function s(r,e){return o(),a("div",null,e[0]||(e[0]=[n('<p>CI/CD pipelines (Continuous Integration and Continuous Delivery/Deployment pipelines) are a set of automated processes and tools that help developers deliver code changes more frequently, reliably, and efficiently. They are a core part of modern software development practices, enabling teams to build, test, and deploy applications with minimal manual intervention.</p><h2 id="what-is-ci-cd" tabindex="-1"><a class="header-anchor" href="#what-is-ci-cd"><span>What is CI/CD?</span></a></h2><h3 id="ci-continuous-integration" tabindex="-1"><a class="header-anchor" href="#ci-continuous-integration"><span>CI (Continuous Integration)</span></a></h3><ul><li>Developers frequently merge their code changes into a shared repository (e.g., GitHub, GitLab).</li><li>Each merge triggers an automated build and testing process to catch issues early.</li></ul><h3 id="cd-continuous-delivery-deployment" tabindex="-1"><a class="header-anchor" href="#cd-continuous-delivery-deployment"><span>CD (Continuous Delivery/Deployment):</span></a></h3><ul><li><strong>Continuous Delivery</strong>: Code changes are automatically tested and prepared for release, but deployment to production is manual.</li><li><strong>Continuous Deployment</strong>: Code changes are automatically deployed to production after passing all tests.</li></ul><h2 id="key-components-of-a-ci-cd-pipeline" tabindex="-1"><a class="header-anchor" href="#key-components-of-a-ci-cd-pipeline"><span>Key Components of a CI/CD Pipeline</span></a></h2><h3 id="source-control" tabindex="-1"><a class="header-anchor" href="#source-control"><span>Source Control</span></a></h3><p>Code is stored in a version control system (e.g., Git). Changes are pushed to branches, and pull requests are used to merge code into the main branch.</p><h3 id="build-automation" tabindex="-1"><a class="header-anchor" href="#build-automation"><span>Build Automation</span></a></h3><p>The pipeline compiles the code and packages it into an executable format (e.g., a Docker image, JAR file, or binary).</p><h3 id="automated-testing" tabindex="-1"><a class="header-anchor" href="#automated-testing"><span>Automated Testing</span></a></h3><p>Unit tests, integration tests, and end-to-end tests are run to ensure the code works as expected.</p><h3 id="artifact-repository" tabindex="-1"><a class="header-anchor" href="#artifact-repository"><span>Artifact Repository</span></a></h3><p>Built artifacts (e.g., Docker images, binaries) are stored in a repository (e.g., Docker Hub, Nexus) for later use.</p><h3 id="deployment-automation" tabindex="-1"><a class="header-anchor" href="#deployment-automation"><span>Deployment Automation</span></a></h3><p>Code is automatically deployed to staging or production environments.</p><h3 id="monitoring-and-feedback" tabindex="-1"><a class="header-anchor" href="#monitoring-and-feedback"><span>Monitoring and Feedback</span></a></h3><p>After deployment, the pipeline monitors the application and provides feedback (e.g., logs, metrics, alerts).</p><h2 id="how-a-ci-cd-pipeline-works" tabindex="-1"><a class="header-anchor" href="#how-a-ci-cd-pipeline-works"><span>How a CI/CD Pipeline Works</span></a></h2><ol><li><strong>Developer Pushes Code</strong></li></ol><p>A developer makes changes and pushes them to a shared repository.</p><ol start="2"><li><strong>Trigger the Pipeline</strong></li></ol><p>The push triggers the CI/CD pipeline (e.g., via a webhook).</p><ol start="3"><li><strong>Run Automated Tests</strong></li></ol><p>The pipeline runs unit tests, integration tests, and other checks to validate the code.</p><ol start="4"><li><strong>Build Artifacts</strong></li></ol><p>If tests pass, the pipeline builds the application (e.g., compiles code, creates a Docker image).</p><ol start="5"><li><strong>Deploy to Staging</strong></li></ol><p>The pipeline deploys the application to a staging environment for further testing.</p><ol start="6"><li><strong>Deploy to Production</strong></li></ol><p>If all tests pass, the pipeline deploys the application to production (in Continuous Deployment) or waits for manual approval (in Continuous Delivery).</p><ol start="7"><li><strong>Monitor and Notify</strong></li></ol><p>The pipeline monitors the application and notifies the team of any issues.</p><h2 id="popular-ci-cd-tools" tabindex="-1"><a class="header-anchor" href="#popular-ci-cd-tools"><span>Popular CI/CD Tools</span></a></h2><h3 id="jenkins" tabindex="-1"><a class="header-anchor" href="#jenkins"><span>Jenkins</span></a></h3><p>An open-source automation server with a large plugin ecosystem.</p><h3 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h3><p>CI/CD workflows directly integrated into GitHub.</p><h3 id="gitlab-ci-cd" tabindex="-1"><a class="header-anchor" href="#gitlab-ci-cd"><span>GitLab CI/CD</span></a></h3><p>Integrated CI/CD tools within GitLab.</p><h3 id="azure-devops" tabindex="-1"><a class="header-anchor" href="#azure-devops"><span>Azure DevOps</span></a></h3><p>A suite of tools for CI/CD and project management.</p><h3 id="aws-codepipeline" tabindex="-1"><a class="header-anchor" href="#aws-codepipeline"><span>AWS CodePipeline</span></a></h3><p>A fully managed CI/CD service on AWS.</p>',45)]))}const l=t(i,[["render",s]]),d=JSON.parse('{"path":"/learn/build/q2uqL1id/","title":"CI&CD pipelines","lang":"en-US","frontmatter":{"title":"CI&CD pipelines","createTime":"2025/02/13 14:17:52","permalink":"/learn/build/q2uqL1id/","author":"Jack","tags":["CI/CD","Jenkins","GitHub Actions","Azure DevOps"],"description":"description","head":[["meta",{"property":"og:url","content":"https://duduainy.top/learn/build/q2uqL1id/"}],["meta",{"property":"og:site_name","content":"Seasoned Jack"}],["meta",{"property":"og:title","content":"CI&CD pipelines"}],["meta",{"property":"og:description","content":"description"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-10T07:32:34.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"CI/CD"}],["meta",{"property":"article:tag","content":"Jenkins"}],["meta",{"property":"article:tag","content":"GitHub Actions"}],["meta",{"property":"article:tag","content":"Azure DevOps"}],["meta",{"property":"article:modified_time","content":"2025-04-10T07:32:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CI&CD pipelines\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-10T07:32:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.48,"words":445},"git":{"updatedTime":1744270354000},"filePathRelative":"notes/learn/build/CI&CD pipelines.md","bulletin":false}');export{l as comp,d as data};
