import{_ as t,c as a,a as n,o as i}from"./app-BIz0KhkQ.js";const s={};function r(o,e){return i(),a("div",null,e[0]||(e[0]=[n('<p>In software systems, authentication is a critical component for ensuring that only authorized users can access resources.</p><p>Below are some common authentication schemes and their underlying principles.</p><h2 id="username-and-password-authentication" tabindex="-1"><a class="header-anchor" href="#username-and-password-authentication"><span>Username and Password Authentication</span></a></h2><p>Users provide a username and password, which the system verifies against stored credentials.</p><p><strong>Principle</strong>:</p><p>The system compares the provided password with a hashed version stored in the database. If they match, access is granted.</p><h2 id="_2fa-two-factor-authentication" tabindex="-1"><a class="header-anchor" href="#_2fa-two-factor-authentication"><span>2FA(Two-Factor Authentication)</span></a></h2><p>Requires two different forms of identification to verify a user&#39;s identity.</p><p><strong>Principle</strong>:</p><p>Combines something the user knows (password) with something the user has (security token).</p><h2 id="mfa" tabindex="-1"><a class="header-anchor" href="#mfa"><span>MFA</span></a></h2><p>Multi-Factor Authentication. Combines two or more independent credentials:</p><ul><li>what the user knows (password)</li><li>what the user has (security token)</li><li>what the user is (biometric verification).</li></ul><p><strong>Principle</strong>:</p><p>Enhances security by requiring multiple forms of verification, making it harder for unauthorized users to gain access.</p><h2 id="sso-single-sign-on" tabindex="-1"><a class="header-anchor" href="#sso-single-sign-on"><span>SSO (Single Sign-On)</span></a></h2><p>Allows users to log in once and gain access to multiple systems without being prompted to log in again at each one.</p><p><strong>Principle</strong>:</p><p>Uses a centralized authentication service to issue tokens that other systems accept as proof of authentication.</p><h2 id="oauth" tabindex="-1"><a class="header-anchor" href="#oauth"><span>OAuth</span></a></h2><p>An open standard for access delegation, commonly used to grant websites or applications access to information on other websites without giving them passwords.</p><p><strong>Principle</strong>:</p><p>Uses tokens instead of credentials. The user authorizes a third-party application to access their data, and the service provider issues an access token.</p><h2 id="openid-connect" tabindex="-1"><a class="header-anchor" href="#openid-connect"><span>OpenID Connect</span></a></h2><p>A simple identity layer on top of the OAuth 2.0 protocol, allowing clients to verify the identity of the end-user based on the authentication performed by an authorization server.</p><p><strong>Principle</strong>:</p><p>Uses JSON Web Tokens (JWT) to represent the identity of the user.</p><h2 id="api-key-authentication" tabindex="-1"><a class="header-anchor" href="#api-key-authentication"><span>API Key Authentication</span></a></h2><p>Uses a unique key to authenticate API requests.</p><p><strong>Principle</strong>:</p><p>The API key is passed with each request, and the server verifies it against a stored key.</p><h2 id="jwt-json-web-token" tabindex="-1"><a class="header-anchor" href="#jwt-json-web-token"><span>JWT(JSON Web Token)</span></a></h2><p>A compact, URL-safe means of representing claims to be transferred between two parties.</p><p><strong>Principle</strong>:</p><p>The token is digitally signed and contains a payload with user information. The server verifies the signature to ensure the token&#39;s authenticity.</p><h2 id="ca-certificate-based-authentication" tabindex="-1"><a class="header-anchor" href="#ca-certificate-based-authentication"><span>CA(Certificate-Based Authentication)</span></a></h2><p>Uses digital certificates to authenticate users or devices.</p><p><strong>Principle</strong>:</p><p>The server verifies the certificate&#39;s validity and checks it against a trusted certificate authority (CA).</p><h2 id="ldap-lightweight-directory-access-protocol" tabindex="-1"><a class="header-anchor" href="#ldap-lightweight-directory-access-protocol"><span>LDAP(Lightweight Directory Access Protocol)</span></a></h2><p>Used for accessing and maintaining distributed directory information services over an IP network.</p><p><strong>Principle</strong>:</p><p>Authenticates users by checking their credentials against a directory service.</p><h2 id="saml-security-assertion-markup-language" tabindex="-1"><a class="header-anchor" href="#saml-security-assertion-markup-language"><span>SAML (Security Assertion Markup Language)</span></a></h2><p>An XML-based framework for exchanging authentication and authorization data between parties.</p><p><strong>Principle</strong>:</p><p>Uses assertions to pass user authentication and authorization information between an identity provider and a service provider.</p><h2 id="radius-remote-authentication-dial-in-user-service" tabindex="-1"><a class="header-anchor" href="#radius-remote-authentication-dial-in-user-service"><span>RADIUS (Remote Authentication Dial-In User Service)</span></a></h2><p>A networking protocol that provides centralized Authentication, Authorization, and Accounting (AAA) management.</p><p><strong>Principle</strong>:</p><p>The RADIUS server authenticates users by checking their credentials against a database.</p>',51)]))}const p=t(s,[["render",r]]),h=JSON.parse('{"path":"/learn/fullstack/v86cHm7/","title":"Authentication","lang":"en-US","frontmatter":{"title":"Authentication","createTime":"2025/02/12 15:12:52","permalink":"/learn/fullstack/v86cHm7/","author":"Jack","tags":["Authentication","JWT","AUTH2"],"description":"description","head":[["meta",{"property":"og:url","content":"https://duduainy.top/learn/fullstack/v86cHm7/"}],["meta",{"property":"og:site_name","content":"Seasoned Jack"}],["meta",{"property":"og:title","content":"Authentication"}],["meta",{"property":"og:description","content":"description"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-03T07:33:13.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"Authentication"}],["meta",{"property":"article:tag","content":"JWT"}],["meta",{"property":"article:tag","content":"AUTH2"}],["meta",{"property":"article:modified_time","content":"2025-06-03T07:33:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Authentication\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-03T07:33:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.64,"words":493},"git":{"updatedTime":1748935993000},"filePathRelative":"notes/learn/fullstack/Authentication.md","bulletin":false}');export{p as comp,h as data};
